group = Mun, height = log(sars_loess),
fill = Mun)) +
geom_density_ridges(stat = "identity",
jittered_points = T, position = "raincloud",
alpha = .7)
ggplot(data = model_data_viz, aes(x = Fecha, y = Mun,
group = Mun, height = log(sars_loess),
fill = Mun)) +
geom_density_ridges(
jittered_points = T, position = "raincloud",
alpha = .7)
ggplot(data = model_data_viz, aes(x = Fecha, y = Mun,
group = Mun, height = log(sars_loess),
fill = Mun)) +
geom_density_ridges(stat = "identity",
jittered_points = T, position = "raincloud",
alpha = .7)
ggplot(data = model_data_viz, aes(x = Fecha, y = Mun,
group = Mun, height = log(sars_loess),
fill = Mun)) +
geom_density_ridges(stat = "identity",
jittered_points = T, position = "raincloud")
ggplot(data = model_data_viz, aes(x = Fecha, y = Mun,
group = Mun, height = log(sars_loess),
fill = stat(x))) +
geom_density_ridges_gradient(stat = "identity")
ggplot(data = model_data_viz, aes(x = Fecha, y = Mun,
group = Mun, height = log(sars_loess),
fill = stat(nHab))) +
geom_density_ridges_gradient(stat = "identity")
model_data_viz$nHab
ggplot(data = model_data_viz, aes(x = Fecha, y = Mun,
group = Mun, height = log(sars_loess),
fill = stat(nHab))) +
geom_density_ridges_gradient(stat = "identity")
ggplot(data = model_data_viz, aes(x = Fecha, y = Mun,
group = Mun, height = log(sars_loess),
fill = nHab)) +
geom_density_ridges_gradient(stat = "identity")
ggplot(data = model_data_viz, aes(x = Fecha, y = Mun,
group = Mun, height = log(sars_loess),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity")
ggplot(data = model_data_viz, aes(x = Fecha, y = Mun,
group = Mun, height = log(sars_loess),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity") +
scale_fill_viridis_c(name = "Population", option = "C")
ggplot(data = model_data_viz, aes(x = Fecha, y = Mun,
group = Mun, height = log(sars_loess),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 3) +
scale_fill_viridis_c(name = "Population", option = "C")
ggplot(data = model_data_viz, aes(x = Fecha, y = Mun,
group = Mun, height = log(sars_loess),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = .75) +
scale_fill_viridis_c(name = "Population", option = "C")
ggplot(data = model_data_viz, aes(x = Fecha, y = Mun,
group = Mun, height = log(sars_loess),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_c(name = "Population", option = "C")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(sars_loess),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_c(name = "Population", option = "C")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_c(name = "Population", option = "C")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_a(name = "Population", option = "C")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_b(name = "Population", option = "C")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_c(name = "Population", option = "C")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_d(name = "Population", option = "C")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_b(name = "Population", option = "C")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_b(name = "Population", option = "B")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_b(name = "Population", option = "A")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_b(name = "Population", option = "B")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_b(name = "Population", option = "C")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_c(name = "Population", option = "C")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_c(name = "Population", option = "B")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_c(name = "Population", option = "A")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_c(name = "Population", option = "C")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_b(name = "Population", option = "C")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_d(name = "Population", option = "C")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_b(name = "Population", option = "D")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_b(name = "Population", option = "E")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_b(name = "Population", option = "F")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_b(name = "Population", option = "C")
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_b(name = "Population", option = "C") +
guides(fill = FALSE)
## FIGURA 1 ##
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_b(name = "Population", option = "C") +
guides(fill = FALSE)
ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_b(name = "Population", option = "C") +
guides(fill = FALSE)
## FIGURA 1 ##
F1A <- ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_b(name = "Population", option = "C") +
guides(fill = FALSE)
F1B <- ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_b(name = "Population", option = "C") +
guides(fill = FALSE)
install.packages("cowplot")
library(cowplot)
plot_grid(F1A, F1B, labels = c("A", "B"))
## FIGURA 1 ##
F1A <- ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(sars_loess),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_b(name = "Population", option = "C") +
guides(fill = FALSE)
F1B <- ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_b(name = "Population", option = "C") +
guides(fill = FALSE)
plot_grid(F1A, F1B, labels = c("A", "B"))
## FIGURA 1 ##
F1A <- ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(sars_loess+1),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_b(name = "Population", option = "C") +
guides(fill = FALSE)
F1B <- ggplot(data = model_data_viz, aes(x = Fecha, y = fct_rev(Mun),
group = Mun, height = log(Ncasos+1),
fill = log(nHab))) +
geom_density_ridges_gradient(stat = "identity", scale = 1.5) +
scale_fill_viridis_b(name = "Population", option = "C") +
guides(fill = FALSE)
plot_grid(F1A, F1B, labels = c("A", "B"))
ggplot(model_data_viz, aes(x = log(sars_loess+1), y = log(Ncasos_lead+1))) +
geom_point()
ggplot(model_data_viz, aes(x = sars_loess, y = Ncasos_lead)) +
geom_point()
ggplot(model_data_viz, aes(x = log(sars_loess+1), y = log(Ncasos_lead+1)) +
ggplot(model_data_viz, aes(x = log(sars_loess+1), y = log(Ncasos_lead+1))) +
geom_point()
ggplot(model_data_viz, aes(x = log(sars_loess+1), y = log(Ncasos_lead+1))) +
ggplot(model_data_viz, aes(x = log(sars_loess+1), y = log(Ncasos_lead+1))) +
geom_point()
ggplot(na.omit(model_data_viz), aes(x = log(sars_loess+1), y = log(Ncasos_lead+1))) +
geom_point()
vis_miss(model_data_viz)
vis_miss(data_hosp4)
vis_miss(data_edar_red)
ggplot(na.omit(model_data_viz), aes(x = log(sars_loess+1), y = log(Ncasos_lead+1))) +
geom_point()
ggplot(model_data_viz, aes(x = log(sars_loess+1), y = log(Ncasos_lead+1))) +
geom_point()
ggplot(na.omit(model_data_viz[,c("sars_loess", "Ncasos")]), aes(x = log(sars_loess+1), y = log(Ncasos_lead+1))) +
geom_point()
ggplot(na.omit(model_data_viz[,c("sars_loess", "Ncasos")]), aes(x = log(sars_loess+1), y = log(Ncasos+1))) +
geom_point()
vis_miss(model_data_viz[,c("sars_loess", "Ncasos")])
ggplot(model_data, aes(x = log(sars_loess+1), y = log(Ncasos+1))) +
geom_point()
ggplot(model_data, aes(x = log(sars_loess+1), y = log(Ncasos_lead+1))) +
geom_point()
install.packages("GGally")
library(GGally)
names(model_data)
ggpairs(data = model_data[,c("Ncasos", "sars_loess")])
model_data_pairs <- model_data[,c("Ncasos", "sars_loess")]
model_data_pairs <- model_data_pairs %>%
mutate(Ncasos_log = log(Ncasos+1),
sars_loess_log = log(sars_loess+1))
ggpairs(data = model_data[,c("Ncasos", "sars_loess")])
ggpairs(data = model_data_pairs)
ggpairs(data = model_data_pairs, color = "darkblue")
?ggpairs
ggpairs(data = model_data_pairs)
ggpairs(data = model_data_pairs,
ggplot2::aes(color = "lightblue",
fill = "black"))
ggpairs(data = model_data_pairs)
p_
p_(F1B)
ggplot(model_data_pairs, aes(x = sars_loess)) +
geom_density(color = "black", fill = "lightblue")
ggplot(model_data_pairs, aes(x = Ncasos)) +
geom_density(color = "black", fill = "lightblue")
ggplot(model_data_pairs, aes(x = sars_loess, y = Ncasos)) +
geom_point()
ggplot(model_data_pairs, aes(x = sars_loess_log, y = Ncasos_log)) +
geom_point()
plot_grid(F2A1, F2A2, F2A3)
F2A1 <- ggplot(model_data_pairs, aes(x = sars_loess)) +
geom_density(color = "black", fill = "lightblue")
F2A2 <- ggplot(model_data_pairs, aes(x = Ncasos)) +
geom_density(color = "black", fill = "lightblue")
F2A3 <- ggplot(model_data_pairs, aes(x = sars_loess, y = Ncasos)) +
geom_point()
plot_grid(F2A1, F2A2, F2A3)
plot_grid(F2A1, F2A2, F2A3,
nrow = 1)
F2A <- plot_grid(F2A1, F2A2, F2A3,
nrow = 1)
F2B1 <- ggplot(model_data_pairs, aes(x = sars_loess)) +
geom_density(color = "black", fill = "lightblue")
F2B2 <- ggplot(model_data_pairs, aes(x = Ncasos)) +
geom_density(color = "black", fill = "lightblue")
F2B3 <- ggplot(model_data_pairs, aes(x = sars_loess_log, y = Ncasos_log)) +
geom_point()
F2B <- plot_grid(F2B1, F2B2, F2B3,
nrow = 1)
F2 <- plot_grid(F2A,F2B,
ncol = 1,
labels = c("No transform", "Log transform"))
F2
F2B1 <- ggplot(model_data_pairs, aes(x = sars_loess_log)) +
geom_density(color = "black", fill = "lightblue")
F2B2 <- ggplot(model_data_pairs, aes(x = Ncasos_log)) +
geom_density(color = "black", fill = "lightblue")
F2B3 <- ggplot(model_data_pairs, aes(x = sars_loess_log, y = Ncasos_log)) +
geom_point()
F2B <- plot_grid(F2B1, F2B2, F2B3,
nrow = 1)
F2 <- plot_grid(F2A,F2B,
ncol = 1,
labels = c("No transform", "Log transform"))
F2
View(model_data_pairs)
F2B3 <- ggplot(model_data_pairs, aes(x = sars_loess_log, y = Ncasos_log)) +
geom_point(alpha = .5)
F2B3
F2B3 <- ggplot(model_data_pairs, aes(x = sars_loess_log, y = Ncasos_log)) +
geom_point(alpha = .2)
F2B3
F2B3 <- ggplot(model_data_pairs, aes(x = sars_loess_log, y = Ncasos_log)) +
geom_point(alpha = .1)
F2B3
F2A1 <- ggplot(model_data_pairs, aes(x = sars_loess)) +
geom_density(color = "black", fill = "lightblue")
F2A2 <- ggplot(model_data_pairs, aes(x = Ncasos)) +
geom_density(color = "black", fill = "lightblue")
F2A3 <- ggplot(model_data_pairs, aes(x = sars_loess, y = Ncasos)) +
geom_point(alpha = .1)
F2A <- plot_grid(F2A1, F2A2, F2A3,
nrow = 1)
F2B1 <- ggplot(model_data_pairs, aes(x = sars_loess_log)) +
geom_density(color = "black", fill = "lightblue")
F2B2 <- ggplot(model_data_pairs, aes(x = Ncasos_log)) +
geom_density(color = "black", fill = "lightblue")
F2B3 <- ggplot(model_data_pairs, aes(x = sars_loess_log, y = Ncasos_log)) +
geom_point(alpha = .1)
F2B <- plot_grid(F2B1, F2B2, F2B3,
nrow = 1)
F2 <- plot_grid(F2A,F2B,
ncol = 1,
labels = c("No transform", "Log transform"))
F2
ggplot(ImpData, aes(x=Var.Names, y=`%IncMSE`)) +
geom_segment( aes(x=Var.Names, xend=Var.Names, y=0, yend=`%IncMSE`), color="skyblue") +
geom_point(aes(size = IncNodePurity), color="blue", alpha=0.6) +
theme_light() +
coord_flip() +
theme(
legend.position="bottom",
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
)
ggplot(ImpData, aes(x = Var.Names, y = `%IncMSE`)) +
geom_bar(stat = "identity")
ggplot(ImpData, aes(x = Var.Names, y = `%IncMSE`, color = IncNodePurity)) +
geom_bar(stat = "identity")
ggplot(ImpData, aes(x = Var.Names, y = `%IncMSE`, fill = IncNodePurity)) +
geom_bar(stat = "identity")
ggplot(ImpData, aes(x = Var.Names, y = `%IncMSE`, fill = IncNodePurity)) +
geom_bar(stat = "identity") +
theme_light() +
coord_flip()
ggplot(ImpData, aes(x = Var.Names, y = `%IncMSE`, fill = IncNodePurity)) +
geom_bar(stat = "identity") +
theme_light() +
coord_flip() +
theme(
legend.position="bottom",
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
)
varImpPlot(rf.fit,
sort = T,
main="Variable Importance Plot")
ggplot(ImpData, aes(x = Var.Names, y = `%IncMSE`, fill = IncNodePurity)) +
geom_bar(stat = "identity") +
theme_light() +
coord_flip() +
theme(
legend.position="bottom",
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
)
ImpData
ggplot(ImpData, aes(x = Var.Names, y = `%IncMSE`, fill = IncNodePurity)) +
geom_bar(stat = "identity") +
theme_light() +
coord_flip() +
theme(
legend.position="right",
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
)
predictions
ggplot(arrange(ImpData, `%IncMSE`), aes(x = Var.Names, y = `%IncMSE`, fill = IncNodePurity)) +
geom_bar(stat = "identity") +
theme_light() +
coord_flip() +
theme(
legend.position="right",
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
)
arrange(ImpData, `%IncMSE`)
ImpData$Var.Names
reorder()
?reorder
ggplot(ImpData, aes(x = reorder(Var.Names), y = `%IncMSE`, fill = IncNodePurity)) +
geom_bar(stat = "identity") +
theme_light() +
coord_flip() +
theme(
legend.position="right",
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
)
reorder(ImpData$Var.Names, ImpData$`%IncMSE`)
ggplot(ImpData, aes(x = reorder(Var.Names,`%IncMSE`), y = `%IncMSE`, fill = IncNodePurity)) +
geom_bar(stat = "identity") +
theme_light() +
coord_flip() +
theme(
legend.position="right",
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
)
### FIGURAS PERFORMANCE MODELO
ggplot(testing_data, aes(x = predictions, y = Ncasos_lead)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(testing_data, aes(x = predictions, y = Ncasos_lead - predictions)) +
geom_point() +
geom_hline(yintercept = 0, color = "red") +
coord_cartesian(ylim = c(-5, 5))
ggplot(testing_data, aes(x = predictions, y = Ncasos_lead - predictions)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
coord_cartesian(ylim = c(-5, 5))
?rfcv
?randomForest
F1A
F1B
F1 <- plot_grid(F1A, F1B, labels = c("A", "B"))
F1
vis_miss(data_edar_red)
F1
F2
F2
plot(nn)
rmse_m
MSE_m <- mse(testing_data$Ncasos_lead, predictions)
MAE_m
e^0.49705
r2
View(model_data_trim1)
ggplot(ImpData, aes(x = reorder(Var.Names,`%IncMSE`), y = `%IncMSE`, fill = IncNodePurity)) +
geom_bar(stat = "identity") +
theme_light() +
coord_flip() +
theme(
legend.position="right",
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
)
### FIGURAS PERFORMANCE MODELO
ggplot(testing_data, aes(x = predictions, y = Ncasos_lead)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(testing_data, aes(x = predictions, y = Ncasos_lead - predictions)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
coord_cartesian(ylim = c(-5, 5))
### FIGURAS PERFORMANCE MODELO
ggplot(testing_data, aes(x = predictions, y = Ncasos_lead)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(testing_data, aes(x = predictions, y = Ncasos_lead - predictions)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
coord_cartesian(ylim = c(-5, 5))
### FIGURAS PERFORMANCE MODELO
F3A <- ggplot(testing_data, aes(x = predictions, y = Ncasos_lead)) +
geom_point() +
geom_smooth(method = "lm")
F3 <- plot_grid(F3A, F3B,
labels = c("A", "B"))
F3B <- ggplot(testing_data, aes(x = predictions, y = Ncasos_lead - predictions)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
coord_cartesian(ylim = c(-5, 5))
F3 <- plot_grid(F3A, F3B,
labels = c("A", "B"))
F3
save.image("RData_modelANDfigures")
